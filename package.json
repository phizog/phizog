{
  "name": "phizog",
  "version": "0.1.0",
  "description": "Socket API Development Environment",
  "main": "main.js",
  "dependencies": {
    "@hapi/joi": "^15.0.1",
    "@hot-loader/react-dom": "^16.8.6",
    "classnames": "2.2.6",
    "connected-react-router": "^6.5.2",
    "electron-notify": "^0.1.0",
    "flexboxgrid": "6.3.1",
    "pino": "^5.13.1"
  },
  "devDependencies": {
    "@types/classnames": "^2.2.9",
    "@types/core-js": "^2.5.2",
    "@types/electron": "1.6.10",
    "@types/electron-notify": "^0.1.7",
    "@types/enzyme": "^3.10.3",
    "@types/jest": "^24.0.16",
    "@types/node": "^12.6.8",
    "@types/pino": "^5.8.7",
    "@types/react": "^16.8.24",
    "@types/react-dom": "^16.8.5",
    "@types/react-hot-loader": "^4.1.0",
    "@types/react-redux": "^7.1.1",
    "@types/react-router": "^5.0.3",
    "@types/react-router-dom": "^4.3.4",
    "@types/react-router-redux": "5.0.18",
    "@types/redux-logger": "3.0.7",
    "@types/styled-components": "^4.1.18",
    "@types/typescript": "2.0.0",
    "@types/uuid": "^3.4.5",
    "awesome-typescript-loader": "5.2.1",
    "axios": "^0.19.0",
    "cross-env": "5.2.0",
    "css-loader": "^3.1.0",
    "electron": "^6.0.0",
    "electron-builder": "^21.2.0",
    "electron-devtools-installer": "2.2.4",
    "electron-is": "3.0.0",
    "enzyme": "^3.10.0",
    "enzyme-adapter-react-16": "^1.14.0",
    "express": "^4.17.1",
    "file-loader": "^4.1.0",
    "github-api": "^3.2.2",
    "history": "4.9.0",
    "html-webpack-plugin": "3.2.0",
    "husky": "^3.0.2",
    "identity-obj-proxy": "3.0.0",
    "is-electron-renderer": "2.0.1",
    "jest": "^24.8.0",
    "json-loader": "0.5.7",
    "lint-staged": "^9.2.1",
    "mini-css-extract-plugin": "^0.8.0",
    "node-sass": "^4.12.0",
    "pino-pretty": "^3.0.1",
    "prettier": "^1.18.2",
    "react": "16.8.6",
    "react-dom": "16.8.6",
    "react-flexbox-grid": "2.1.2",
    "react-hot-loader": "^4.12.10",
    "react-loading": "2.0.3",
    "react-redux": "^7.1.0",
    "react-router": "^5.0.1",
    "react-router-dom": "^5.0.1",
    "react-svg": "^10.0.14",
    "redux": "^4.0.4",
    "redux-logger": "3.0.6",
    "redux-thunk": "2.3.0",
    "sass-loader": "7.1.0",
    "source-map-support": "^0.5.13",
    "standard": "^13.1.0",
    "style-loader": "0.23.1",
    "styled-components": "^4.3.2",
    "styled-normalize": "8.0.6",
    "tslint": "^5.18.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-config-standard": "8.0.1",
    "typescript": "^3.5.3",
    "typescript-react-svg-icon-generator": "1.1.9",
    "url-loader": "^2.1.0",
    "uuid": "3.3.2",
    "webpack": "^4.38.0",
    "webpack-cli": "^3.3.6",
    "webpack-dev-middleware": "^3.7.0",
    "webpack-hot-middleware": "^2.25.0",
    "webpack-merge": "4.2.1"
  },
  "scripts": {
    "test": "cross-env NODE_ENV=test node --trace-warnings ./scripts/test-runner.js",
    "test:watch": "cross-env NODE_ENV=test WATCH_MODE=true node --trace-warnings ./scripts/test-runner.js --watch",
    "test:coverage": "jest --coverage --maxWorkers=4",
    "hot-server": "cross-env NODE_ENV=development node --max_old_space_size=2096 server.js",
    "build-main-dev": "cross-env HOT=1 NODE_ENV=development webpack --config webpack.config.ts.js --progress --profile --colors",
    "build-main": "cross-env HOT=1 NODE_ENV=production webpack --config webpack.config.ts.js --progress --profile --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config webpack.config.production.js --progress --profile --colors",
    "build": "npm run build-main && npm run build-renderer",
    "start": "cross-env NODE_ENV=production electron ./app/",
    "start-hot": "cross-env HOT=1 NODE_ENV=development electron ./app/main.js --disable-gpu",
    "dev": "npm run build-main-dev && npm run hot-server",
    "package": "npm run build && build --publish never",
    "package:win": "npm run build && build --win --x64",
    "package:linux": "npm run build && build --linux",
    "package:mac": "npm run build && build --mac",
    "package:all": "npm run build && build -mwl",
    "formatter": "prettier --parser typescript --write --config .prettierrc \"{app,test}/**/*.ts{,x}\"",
    "lint": "tslint -c tslint.json \"{app,test}/**/*.ts{,x}\"",
    "lint:fix": "tslint -c tslint.json --fix \"{app,test}/**/*.ts{,x}\""
  },
  "build": {
    "productName": "Phizog",
    "appId": "com.phizog.phizog",
    "files": [
      "dist/",
      "node_modules/",
      "app.html",
      "main.js",
      "main.js.map",
      "package.json"
    ],
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "win": {
      "target": [
        "nsis",
        "appx"
      ]
    },
    "linux": {
      "target": [
        "deb"
      ],
      "category": "Development"
    },
    "mac": {
      "category": "public.app-category.developer-tools",
      "target": [
        "dmg"
      ]
    }
  },
  "bin": {
    "electron": "./node_modules/.bin/electron",
    "webpack": "./node_modules/webpack/bin/webpack"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/phizog/phizog.git"
  },
  "keywords": [
    "websocket",
    "socket",
    "api",
    "development",
    "environment"
  ],
  "contributors": [
    {
      "name": "Masoud Ghorbani",
      "email": "msud.ghorbani@gmail.com"
    },
    {
      "name": "Farzad Yousef Zadeh",
      "email": "farskid@gmail.com"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/phizog/phizog/issues"
  },
  "homepage": "https://github.com/phizog/phizog#readme",
  "jest": {
    "setupFiles": [
      "./scripts/test-shim.js",
      "./scripts/test-setup.js"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "test-file-stub",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy",
      "electron": "<rootDir>/scripts/mocks/electron.ts"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ],
    "verbose": true,
    "testURL": "http://localhost/",
    "moduleDirectories": [
      "node_modules"
    ],
    "transform": {
      "^.+\\.(ts|tsx)$": "<rootDir>/scripts/test-preprocessor.js"
    },
    "testMatch": [
      "**/?(*.)(spec|test).ts?(x)"
    ],
    "transformIgnorePatterns": [
      "node_modules/?!(path)"
    ]
  },
  "devEngines": {
    "node": ">=6.x",
    "npm": ">=4.x"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "linters": {
      "./**/*.{ts,tsx}": [
        "npm run lint:fix && npm run formatter",
        "git add"
      ]
    }
  }
}
