// Generated by gulp icon - do not modify manually

import * as React from 'react'

const iconList = ['user']

export interface IconProps {
  color?: string
  className?: string
  height?: number
  kind?: string | any
  onClick?: () => void
  preview?: boolean
  size?: number
  style?: any
  width?: number
  wrapperStyle?: any
}
export default class Icon extends React.Component<IconProps, {}> {
  static defaultProps = {
    className: '',
    color: 'currentColor',
    size: 32
  }

  render () {
    const { kind, preview } = this.props
    return preview ? this.renderPreview() : this.renderIcon(kind)
  }

  renderPreview () {
    return <div>{iconList.map(kind => this.renderPreviewKind(kind))}</div>
  }

  renderIcon (kind: string) {
    const { wrapperStyle } = this.props
    if (wrapperStyle) {
      return <div style={wrapperStyle}>{this.getIcon(kind)}</div>
    }
    return this.getIcon(kind)
  }

  renderPreviewKind (kind: string) {
    return (
      <div key={kind}>
        <h3>&lt;Icon kind="{kind}" /&gt;</h3>
        {this.renderIcon(kind)}
      </div>
    )
  }

  getIcon (kind: string) {
    const { color, height, onClick, size, style, width, className } = this.props

    switch (kind) {
      case 'user':
        return (
          <svg
            xmlns='http://www.w3.org/2000/svg'
            fill={color}
            height={height || size}
            width={width || size}
            onClick={onClick}
            style={style}
            className={className}
            viewBox='0 0 24 24'
            stroke='currentColor'
            strokeWidth='2'
            strokeLinecap='round'
            strokeLinejoin='round'
          >
            <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2' />
            <circle cx='12' cy='7' r='4' />
          </svg>
        )
      default:
        return null
    }
  }
}
